package plugins.mBurda.filters;

import icy.gui.dialog.MessageDialog;
import plugins.adufour.ezplug.*;

public class CurvilinearStructures extends EzPlug {

	Vesselness2D ves = null;
	Neuriteness2D neu = null;
	
	EzVarInteger blur = new EzVarInteger("Radius of blur",1,0,10,1);
	EzVarBoolean vesselness = new EzVarBoolean("Compute Vesselness?",false);
	EzVarBoolean neuriteness = new EzVarBoolean("Compute neuriteness?",false);
	EzVarDouble betaThreshold =new EzVarDouble("Disparsity control",0,-50,50,1);
	EzVarDouble gammaThreshold = new EzVarDouble("Relative brightness control",0,-50,50,1);
	EzVarDouble alphaSteer = new EzVarDouble("Steerable filter equivalent",0,-50,50,1);
	EzVarDouble cutoffValue = new EzVarDouble("Cutoff value",0,-50,50,1);
	EzVarDouble threshold = new EzVarDouble("Threshold",0,-50,50,0.5);
	EzVarDouble gainFactor = new EzVarDouble("Gain factor",0,-50,50,1);
	EzVarBoolean vesPhase = new EzVarBoolean("Compute vesselness with phase congruency?",false);
	EzVarBoolean neuPhase = new EzVarBoolean("Compute neuriteness with phase congruency?",false);
//	EzVarEnum<Sequence> source = new EzVarEnum<Sequence>("Choose Input image",getOpenedSequences());
			
	EzGroup vesGroup = new EzGroup("Vesselness",betaThreshold,gammaThreshold);
	EzGroup neuGroup = new EzGroup("Neuriteness",alphaSteer);
	EzGroup phaseCongGroup = new EzGroup("Phase congruency parameters",cutoffValue,threshold,gainFactor);
	EzGroup outputGroup = new EzGroup("Show output",vesselness,vesPhase,neuriteness,neuPhase);
	@Override
	protected void initialize() {
		
		addEzComponent(blur);
		addEzComponent(outputGroup);
		addEzComponent(vesGroup);
		addEzComponent(neuGroup);
		addEzComponent(phaseCongGroup);
		
//		vesPhase.addVisibilityTriggerTo(vesGroup, true);
//		vesselness.addVisibilityTriggerTo(vesGroup, true);
//		neuriteness.addVisibilityTriggerTo(neuGroup, true);
//		neuPhase.addVisibilityTriggerTo(neuGroup, true);
	}

	@Override
	protected void execute() {
		if(vesselness.isEnabled()) System.out.println("This is checked");
		MessageDialog.showDialog("phaseCong is working fine !");
		if(vesselness.isEnabled()){
			ves = new Vesselness2D(getActiveImage(), betaThreshold.getValue(), gammaThreshold.getValue());
			ves.makeImage2D();
		}
		if(vesPhase.isEnabled()){
			if(ves == null) ves = new Vesselness2D(getActiveImage(), betaThreshold.getValue(), gammaThreshold.getValue());
			ves.makeImageWithPhase2D();
		}
		if(neuriteness.isEnabled()){
			neu = new Neuriteness2D(getActiveImage(), alphaSteer.getValue());
			neu.makeImage2D();
		}
		if(neuPhase.isEnabled()){
			if(neu == null) neu = new Neuriteness2D(getActiveImage(), alphaSteer.getValue());
			neu.makeImageWithPhase2D();
		}
	}

//	private Sequence[] getOpenedSequences(){
//		
//	}
	
	@Override
	public void clean() {
		// TODO Auto-generated by Icy4Eclipse
	}
}